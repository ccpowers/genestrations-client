import { Button, Paper, TextField } from '@mui/material';
import React, { useEffect, useState } from 'react';
import { start } from 'repl';

interface NextPromptFormProps  {
    //submit: (prompt: string) => void,
    name: string
};

// TODO refactor this
const url = 'https://018b-72-80-40-33.ngrok-free.app';
const NextPromptForm: React.FC<NextPromptFormProps> = ({name}) => {
    const [prompt, setPrompt] = useState('');
    const [imageUrl, setImageUrl] = useState('');

    const onClick = (e: any) => {
        submit(prompt);
    };

    const onPromptInput = (e: any) => {setPrompt(e.target.value)};


    // polling for image updates
    // imagePollTimer should run when imageUrl is blacnk
    let imagePollTimer: NodeJS.Timer | null = null;
    const startImagePolling = () => {
        if (imagePollTimer === null) {
            console.log(`Starting image polling`);
            imagePollTimer = setInterval(()=> getNextImage(name), 500);
        }
    }
    const stopImagePolling = () => {
        if (imagePollTimer != null) {
            console.log(`Stopping image polling`);
            clearInterval(imagePollTimer);
            imagePollTimer = null;
        }
    }

    // fetch data from server
    useEffect(() => {
        startImagePolling();
    }, []);

    const getNextImage = (playerName: string) => {
        console.log(`Getting next image for player ${playerName}`);
        fetch(`${url}/image`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({player: name})
        })
        .then((response) => response.json())
        .then((data) => {
            if( data.success && data.url ) {
                console.log(`Got image url ${data.url}`);
                setImageUrl(`${url}/${data.url}`);

                // turn off image poll timer
                stopImagePolling();
            } else {
                setImageUrl('');
                console.log(`Got image response ${JSON.stringify(data)}`);
            }
        })
    }

    const submit = (prompt: string) => {
        fetch(`${url}/prompt`, {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json'
          },
          body: JSON.stringify({player: name, prompt: prompt})})
        .then((response) => response.json())
        .then((data) => {
          // start polling for next image is res is success
            if (data.success) {
                startImagePolling();
                setImageUrl('');
                console.log(`Clearing imageUrl`);
            } else {
                console.log(`Error submitting prompt: ${data.msg}`);
            }


        }).catch((e) => {
          console.log(`Error submitting prompt: ${JSON.stringify(e)}`)
        })
    }
    return (
        <div>
            {imageUrl !== '' &&
                <div>
                <Paper variant="outlined">
                    <img src={imageUrl}
                    alt="generated by ai" />
                </Paper>
                <TextField label='What prompt generated this image?'
                    value={prompt}
                    onInput={onPromptInput}
                />
                <Button onClick={onClick}>Submit</Button>
                </div>
            }
            {imageUrl === '' && 
                <div>Hang tight, image on the way!</div>
            }
        </div>
    );
};

export default NextPromptForm;